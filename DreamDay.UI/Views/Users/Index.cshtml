@model IEnumerable<DreamDay.Models.Entities.User>

@{
    ViewData["Title"] = "Users List";
}

@if (User.IsInRole("Admin"))
{
    <div class="container-fluid px-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="mt-4"><i class="bi bi-people me-2"></i>User Management</h1>
            <a asp-controller="Users" asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle me-1"></i>Create New User
            </a>
        </div>

        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <i class="bi bi-table me-1"></i>
                System Users
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered" id="usersTable">
                        <thead class="table-light">
                            <tr>
                                <th>Full Name</th>
                                <th>Email</th>
                                <th>Role</th>
                                <th>Status</th>
                                <th>Created At (UTC)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>@user.FullName</td>
                                    <td>@user.Email</td>
                                    <td>
                                        <span class="badge @GetRoleBadgeClass(user.Role)">
                                            @user.Role
                                        </span>
                                    </td>
                                    <td>@user.CreatedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@user.Id"
                                               class="btn btn-info btn-sm" title="Details">
                                                <i class="bi bi-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@user.Id"
                                               class="btn btn-warning btn-sm" title="Edit">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            @if (user.Role != "Admin") // Prevent deleting other admins
                                            {
                                                <a asp-action="Delete" asp-route-id="@user.Id"
                                                   class="btn btn-danger btn-sm" title="Delete">
                                                    <i class="bi bi-trash"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger mt-5" role="alert">
        <h4 class="alert-heading"><i class="bi bi-shield-lock me-2"></i>Access Denied</h4>
        <p>You don't have permission to access this page. Only administrators can manage users.</p>
        <hr>
        <p class="mb-0">If you believe this is an error, please contact your system administrator.</p>
    </div>
}

@functions {
    string GetRoleBadgeClass(string role)
    {
        return role switch
        {
            "Admin" => "bg-danger",
            "Supplier" => "bg-warning",
            "Planner" => "bg-info",
            _ => "bg-secondary",
        };
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#usersTable').DataTable({
                responsive: true,
                columnDefs: [
                    { orderable: false, targets: [5] } // Disable sorting for actions column
                ],
                order: [[4, 'desc']] // Default sort by Created At descending
            });
        });
    </script>
}