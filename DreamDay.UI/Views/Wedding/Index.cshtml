@model DreamDay.Models.ViewModels.WeddingViewModel
@{
    ViewData["Title"] = "Create New Wedding";
    // Pre-populate services list (can also be done in ViewModel or passed via ViewData)
    var allAvailableServices = new[] { "Photographer", "Catering", "Florist", "Music/DJ", "Planner", "Venue Booking", "Decorations", "Invitations", "Transportation", "Cake" };
}

<h2>@ViewData["Title"]</h2>

@if (User.IsInRole("User") || User.IsInRole("Admin"))
{
    <form asp-action="Index" asp-controller="Wedding" method="post" enctype="multipart/form-data" id="weddingForm">
        @Html.AntiForgeryToken()
        <div class="card mb-4">
            <div class="card-header bg-primary text-white">
                <h3 class="mb-0">Plan Your Dream Day</h3>
            </div>
            <div class="card-body">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <h4>Basic Details</h4>
                <hr />
                <div class="row g-3 mb-3">
                    <div class="col-md-6">
                        <label asp-for="WeddingName" class="form-label"></label>
                        <input asp-for="WeddingName" class="form-control" required />
                        <span asp-validation-for="WeddingName" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        <label asp-for="WeddingDate" class="form-label"></label>
                        <input asp-for="WeddingDate" class="form-control" type="date" required />
                        <span asp-validation-for="WeddingDate" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        @* <label asp-for="StartTime" class="form-label"></label> *@
                        @* <input asp-for="StartTime" class="form-control" type="time" required /> *@
                        @* <span asp-validation-for="StartTime" class="text-danger"></span> *@
                    </div>
                    <div class="col-md-6">
                        <label asp-for="WeddingLocation" class="form-label"></label>
                        <input asp-for="WeddingLocation" class="form-control" required />
                        <span asp-validation-for="WeddingLocation" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="WeddingTheme" class="form-label"></label>
                        <input asp-for="WeddingTheme" class="form-control" />
                        <span asp-validation-for="WeddingTheme" class="text-danger"></span>
                    </div>
                    <div class="col-12">
                        <label asp-for="WeddingDescription" class="form-label"></label>
                        <textarea asp-for="WeddingDescription" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="WeddingDescription" class="text-danger"></span>
                    </div>
                    <div class="col-12">
                        <label asp-for="CoverImage" class="form-label">Cover Image</label>
                        <input asp-for="CoverImage" class="form-control" type="file" accept="image/*" />
                        <span asp-validation-for="CoverImage" class="text-danger"></span>
                    </div>
                </div>

                <h4>Guest Information</h4>
                <hr />
                <div class="row g-3 mb-3">
                    <div class="col-md-4">
                        <label asp-for="EstimatedGuests" class="form-label"></label>
                        <input asp-for="EstimatedGuests" class="form-control" type="number" min="1" required />
                        <span asp-validation-for="EstimatedGuests" class="text-danger"></span>
                    </div>
                    <div class="col-md-4">
                        <label asp-for="GuestList" class="form-label">Upload Guest List (Optional CSV)</label>
                        <input asp-for="GuestList" class="form-control" type="file" accept=".csv" />
                        <span asp-validation-for="GuestList" class="text-danger"></span>
                    </div>
                    <div class="col-md-4 d-flex align-items-center pt-3">
                        <div class="form-check form-switch">
                            <input asp-for="EnableRSVP" class="form-check-input" type="checkbox" />
                            <label asp-for="EnableRSVP" class="form-check-label"></label>
                        </div>
                    </div>
                </div>

                <h5>Guest Categories</h5>
                <table class="table table-sm table-bordered" id="guestCategoriesTable">
                    <thead class="table-light">
                        <tr>
                            <th>Category Name</th>
                            <th style="width: 150px;">Count</th>
                            <th style="width: 100px;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.GuestCategories != null && Model.GuestCategories.Any())
                        {
                            for (int i = 0; i < Model.GuestCategories.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <input asp-for="GuestCategories[i].Name" class="form-control form-control-sm" placeholder="e.g., Bride's Family" />
                                        <span asp-validation-for="GuestCategories[i].Name" class="text-danger"></span>
                                    </td>
                                    <td>
                                        <input asp-for="GuestCategories[i].Count" class="form-control form-control-sm" type="number" min="0" />
                                        <span asp-validation-for="GuestCategories[i].Count" class="text-danger"></span>
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-danger remove-category">Remove</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td>
                                    <input name="GuestCategories[0].Name" class="form-control form-control-sm" placeholder="e.g., Bride's Family" />
                                </td>
                                <td>
                                    <input name="GuestCategories[0].Count" class="form-control form-control-sm" type="number" min="0" />
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-outline-danger remove-category">Remove</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" class="btn btn-sm btn-outline-primary mb-3" id="addCategory"><i class="bi bi-plus-circle"></i> Add Category</button>

                <h4>Budget & Services</h4>
                <hr />
                <div class="row g-3 mb-3">
                    <div class="col-md-6">
                        <label asp-for="TotalBudget" class="form-label"></label>
                        <div class="input-group">
                            <span class="input-group-text">$</span>
                            <input asp-for="TotalBudget" class="form-control" type="number" min="0" step="0.01" required />
                        </div>
                        <span asp-validation-for="TotalBudget" class="text-danger"></span>
                    </div>
                </div>

                <h5>Required Services</h5>
                <div class="mb-3 p-3 border rounded">
                    <div class="row">
                        @for (int i = 0; i < allAvailableServices.Length; i++)
                        {
                            var service = allAvailableServices[i];
                            <div class="col-md-3 col-sm-6">
                                <div class="form-check">
                                    @* Ensure Model.Services is List<string> in your ViewModel *@
                                    <input class="form-check-input" type="checkbox" name="Services" value="@service" id="service_@service.Replace(" ", "")"
                                    @(Model.Services != null && Model.Services.Contains(service) ? "checked" : "") />
                                    <label class="form-check-label" for="service_@service.Replace(" ", "")">@service</label>
                                </div>
                            </div>
                        }
                    </div>
                </div>


                <h4>Day's Agenda</h4>
                <hr />
                <table class="table table-sm table-bordered" id="agendaTable">
                    <thead class="table-light">
                        <tr>
                            <th style="width: 130px;">Time</th>
                            <th>Event/Activity</th>
                            <th>Location</th>
                            <th>Responsible Person</th>
                            <th>Notes</th>
                            <th style="width: 100px;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Agenda != null && Model.Agenda.Any())
                        {
                            for (int i = 0; i < Model.Agenda.Count; i++)
                            {
                                <tr>
                                    <td><input asp-for="Agenda[i].Time" class="form-control form-control-sm" type="time" /></td>
                                    <td><input asp-for="Agenda[i].Event" class="form-control form-control-sm" placeholder="e.g., Ceremony" /></td>
                                    <td><input asp-for="Agenda[i].Location" class="form-control form-control-sm" placeholder="e.g., Main Hall" /></td>
                                    <td><input asp-for="Agenda[i].Responsible" class="form-control form-control-sm" placeholder="e.g., Officiant" /></td>
                                    <td><input asp-for="Agenda[i].Notes" class="form-control form-control-sm" /></td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-outline-danger remove-agenda">Remove</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td><input name="Agenda[0].Time" class="form-control form-control-sm" type="time" /></td>
                                <td><input name="Agenda[0].Event" class="form-control form-control-sm" placeholder="e.g., Ceremony" /></td>
                                <td><input name="Agenda[0].Location" class="form-control form-control-sm" placeholder="e.g., Main Hall" /></td>
                                <td><input name="Agenda[0].Responsible" class="form-control form-control-sm" placeholder="e.g., Officiant" /></td>
                                <td><input name="Agenda[0].Notes" class="form-control form-control-sm" /></td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-outline-danger remove-agenda">Remove</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <button type="button" class="btn btn-sm btn-outline-primary mb-3" id="addAgenda"><i class="bi bi-plus-circle"></i> Add Agenda Item</button>

                <hr />
                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                    <button type="submit" class="btn btn-success px-4">
                        <i class="bi bi-save"></i> Create Wedding
                    </button>
                    <a asp-action="Index" asp-controller="Home" class="btn btn-outline-secondary">Cancel</a>
                </div>
            </div>
        </div>
    </form>
}
else
{
    <div class="alert alert-danger mt-5" role="alert">
        <h4 class="alert-heading"><i class="bi bi-shield-lock me-2"></i>Access Denied</h4>
        <p>You do not have permission to create a new wedding. Please log in with appropriate credentials.</p>
        <hr>
        <p class="mb-0">If you believe this is an error, please contact your system administrator.</p>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Function to re-index input names for a given table
            function reindexTableRows(tableSelector, namePrefix) {
                $(tableSelector + ' tbody tr').each(function (rowIndex, row) {
                    $(row).find('input, select, textarea').each(function (colIndex, el) {
                        var oldName = $(el).attr('name');
                        if (oldName) {
                            var newName = oldName.replace(new RegExp(namePrefix + "\\[\\d+\\]", "g"), namePrefix + '[' + rowIndex + ']');
                            $(el).attr('name', newName);
                            $(el).attr('id', newName); // Also update id for labels if any
                        }
                    });
                });
            }

            // Guest Categories dynamic add/remove
            let categoryTable = '#guestCategoriesTable';
            $('#addCategory').click(function () {
                let categoryIndex = $(categoryTable + ' tbody tr').length;
                let row = `<tr>
                            <td><input name="GuestCategories[${categoryIndex}].Name" class="form-control form-control-sm" placeholder="e.g., Bride's Family" /></td>
                            <td><input name="GuestCategories[${categoryIndex}].Count" class="form-control form-control-sm" type="number" min="0" /></td>
                            <td><button type="button" class="btn btn-sm btn-outline-danger remove-category">Remove</button></td>
                           </tr>`;
                $(categoryTable + ' tbody').append(row);
            });
            $(document).on('click', '.remove-category', function () {
                $(this).closest('tr').remove();
                reindexTableRows(categoryTable, 'GuestCategories');
            });

            // Agenda dynamic add/remove
            let agendaTable = '#agendaTable';
            $('#addAgenda').click(function () {
                let agendaIndex = $(agendaTable + ' tbody tr').length;
                let row = `<tr>
                            <td><input name="Agenda[${agendaIndex}].Time" class="form-control form-control-sm" type="time" /></td>
                            <td><input name="Agenda[${agendaIndex}].Event" class="form-control form-control-sm" placeholder="e.g., Ceremony" /></td>
                            <td><input name="Agenda[${agendaIndex}].Location" class="form-control form-control-sm" placeholder="e.g., Main Hall" /></td>
                            <td><input name="Agenda[${agendaIndex}].Responsible" class="form-control form-control-sm" placeholder="e.g., Officiant" /></td>
                            <td><input name="Agenda[${agendaIndex}].Notes" class="form-control form-control-sm" /></td>
                            <td><button type="button" class="btn btn-sm btn-outline-danger remove-agenda">Remove</button></td>
                           </tr>`;
                $(agendaTable + ' tbody').append(row);
            });
            $(document).on('click', '.remove-agenda', function () {
                $(this).closest('tr').remove();
                reindexTableRows(agendaTable, 'Agenda');
            });

             // Initialize with at least one row if model is empty (for create scenarios)
            if ('@Model.GuestCategories' === null || '@Model.GuestCategories.Count' === '0') {
                 if ($(categoryTable + ' tbody tr').length === 0) { // Check if rendered rows are none
                    $('#addCategory').click(); // Add one default row
                 }
            }
             if ('@Model.Agenda' === null || '@Model.Agenda.Count' === '0') {
                 if ($(agendaTable + ' tbody tr').length === 0) { // Check if rendered rows are none
                    $('#addAgenda').click(); // Add one default row
                 }
            }
        });
    </script>
}